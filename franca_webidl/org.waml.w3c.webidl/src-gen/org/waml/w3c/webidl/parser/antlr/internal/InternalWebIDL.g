/*
* generated by Xtext
*/
grammar InternalWebIDL;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	
}

@lexer::header {
package org.waml.w3c.webidl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.waml.w3c.webidl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.waml.w3c.webidl.services.WebIDLGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 
 	private WebIDLGrammarAccess grammarAccess;
 	
    public InternalWebIDLParser(TokenStream input, WebIDLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "IDLDefinitions";	
   	}
   	
   	@Override
   	protected WebIDLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleIDLDefinitions
entryRuleIDLDefinitions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIDLDefinitionsRule()); }
	 iv_ruleIDLDefinitions=ruleIDLDefinitions 
	 { $current=$iv_ruleIDLDefinitions.current; } 
	 EOF 
;

// Rule IDLDefinitions
ruleIDLDefinitions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getIDLDefinitionsAccess().getImportsImportParserRuleCall_0_0()); 
	    }
		lv_imports_0_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIDLDefinitionsRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_0_0, 
        		"Import");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getIDLDefinitionsAccess().getDefinitionsAbstractDefinitionsParserRuleCall_1_0()); 
	    }
		lv_definitions_1_0=ruleAbstractDefinitions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIDLDefinitionsRule());
	        }
       		add(
       			$current, 
       			"definitions",
        		lv_definitions_1_0, 
        		"AbstractDefinitions");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
    }
(
(
		lv_importURI_1_0=RULE_STRING
		{
			newLeafNode(lv_importURI_1_0, grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"importURI",
        		lv_importURI_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getImportAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleTypeDef
entryRuleTypeDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeDefRule()); }
	 iv_ruleTypeDef=ruleTypeDef 
	 { $current=$iv_ruleTypeDef.current; } 
	 EOF 
;

// Rule TypeDef
ruleTypeDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='typedef' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTypeDefAccess().getTypedefKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeDefAccess().getTypeTypeRefParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeDefRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"TypeRef");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getTypeDefAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTypeDefAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleTypeRef
entryRuleTypeRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeRefRule()); }
	 iv_ruleTypeRef=ruleTypeRef 
	 { $current=$iv_ruleTypeRef.current; } 
	 EOF 
;

// Rule TypeRef
ruleTypeRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTypeRefAccess().getPrimitiveTypeRefParserRuleCall_0_0()); 
    }
    this_PrimitiveTypeRef_0=rulePrimitiveTypeRef
    { 
        $current = $this_PrimitiveTypeRef_0.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		lv_isArray_1_0=	'[]' 
    {
        newLeafNode(lv_isArray_1_0, grammarAccess.getTypeRefAccess().getIsArrayLeftSquareBracketRightSquareBracketKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeRefRule());
	        }
       		setWithLastConsumed($current, "isArray", true, "[]");
	    }

)
)?)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTypeRefAccess().getSequenceTypeParserRuleCall_1_0()); 
    }
    this_SequenceType_2=ruleSequenceType
    { 
        $current = $this_SequenceType_2.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		lv_isArray_3_0=	'[]' 
    {
        newLeafNode(lv_isArray_3_0, grammarAccess.getTypeRefAccess().getIsArrayLeftSquareBracketRightSquareBracketKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeRefRule());
	        }
       		setWithLastConsumed($current, "isArray", true, "[]");
	    }

)
)?)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTypeRefAccess().getUserTypeRefParserRuleCall_2_0()); 
    }
    this_UserTypeRef_4=ruleUserTypeRef
    { 
        $current = $this_UserTypeRef_4.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		lv_isArray_5_0=	'[]' 
    {
        newLeafNode(lv_isArray_5_0, grammarAccess.getTypeRefAccess().getIsArrayLeftSquareBracketRightSquareBracketKeyword_2_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeRefRule());
	        }
       		setWithLastConsumed($current, "isArray", true, "[]");
	    }

)
)?))
;





// Entry rule entryRuleUserTypeRef
entryRuleUserTypeRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUserTypeRefRule()); }
	 iv_ruleUserTypeRef=ruleUserTypeRef 
	 { $current=$iv_ruleUserTypeRef.current; } 
	 EOF 
;

// Rule UserTypeRef
ruleUserTypeRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getUserTypeRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getUserTypeRefAccess().getTypeTypesCrossReference_0()); 
	    }
		ruleScopedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
;







// Entry rule entryRulePrimitiveTypeRef
entryRulePrimitiveTypeRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimitiveTypeRefRule()); }
	 iv_rulePrimitiveTypeRef=rulePrimitiveTypeRef 
	 { $current=$iv_rulePrimitiveTypeRef.current; } 
	 EOF 
;

// Rule PrimitiveTypeRef
rulePrimitiveTypeRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_unsigned_0_0=	'unsigned' 
    {
        newLeafNode(lv_unsigned_0_0, grammarAccess.getPrimitiveTypeRefAccess().getUnsignedUnsignedKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveTypeRefRule());
	        }
       		setWithLastConsumed($current, "unsigned", true, "unsigned");
	    }

)
)?(
(
(
		lv_name_1_1=	'void' 
    {
        newLeafNode(lv_name_1_1, grammarAccess.getPrimitiveTypeRefAccess().getNameVoidKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveTypeRefRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_1, null);
	    }

    |		lv_name_1_2=	'boolean' 
    {
        newLeafNode(lv_name_1_2, grammarAccess.getPrimitiveTypeRefAccess().getNameBooleanKeyword_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveTypeRefRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_2, null);
	    }

    |		lv_name_1_3=	'byte' 
    {
        newLeafNode(lv_name_1_3, grammarAccess.getPrimitiveTypeRefAccess().getNameByteKeyword_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveTypeRefRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_3, null);
	    }

    |		lv_name_1_4=	'double' 
    {
        newLeafNode(lv_name_1_4, grammarAccess.getPrimitiveTypeRefAccess().getNameDoubleKeyword_1_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveTypeRefRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_4, null);
	    }

    |		lv_name_1_5=	'float' 
    {
        newLeafNode(lv_name_1_5, grammarAccess.getPrimitiveTypeRefAccess().getNameFloatKeyword_1_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveTypeRefRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_5, null);
	    }

    |		lv_name_1_6=	'short' 
    {
        newLeafNode(lv_name_1_6, grammarAccess.getPrimitiveTypeRefAccess().getNameShortKeyword_1_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveTypeRefRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_6, null);
	    }

    |		lv_name_1_7=	'long' 
    {
        newLeafNode(lv_name_1_7, grammarAccess.getPrimitiveTypeRefAccess().getNameLongKeyword_1_0_6());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveTypeRefRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_7, null);
	    }

    |		lv_name_1_8=	'Object' 
    {
        newLeafNode(lv_name_1_8, grammarAccess.getPrimitiveTypeRefAccess().getNameObjectKeyword_1_0_7());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveTypeRefRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_8, null);
	    }

    |		lv_name_1_9=	'object' 
    {
        newLeafNode(lv_name_1_9, grammarAccess.getPrimitiveTypeRefAccess().getNameObjectKeyword_1_0_8());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveTypeRefRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_9, null);
	    }

    |		lv_name_1_10=	'any' 
    {
        newLeafNode(lv_name_1_10, grammarAccess.getPrimitiveTypeRefAccess().getNameAnyKeyword_1_0_9());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveTypeRefRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_10, null);
	    }

    |		lv_name_1_11=	'octet' 
    {
        newLeafNode(lv_name_1_11, grammarAccess.getPrimitiveTypeRefAccess().getNameOctetKeyword_1_0_10());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveTypeRefRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_11, null);
	    }

    |		lv_name_1_12=	'DOMString' 
    {
        newLeafNode(lv_name_1_12, grammarAccess.getPrimitiveTypeRefAccess().getNameDOMStringKeyword_1_0_11());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveTypeRefRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_12, null);
	    }

)

)
)+(
(
		lv_nullable_2_0=	'?' 
    {
        newLeafNode(lv_nullable_2_0, grammarAccess.getPrimitiveTypeRefAccess().getNullableQuestionMarkKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveTypeRefRule());
	        }
       		setWithLastConsumed($current, "nullable", true, "?");
	    }

)
)?)
;





// Entry rule entryRuleSequenceType
entryRuleSequenceType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSequenceTypeRule()); }
	 iv_ruleSequenceType=ruleSequenceType 
	 { $current=$iv_ruleSequenceType.current; } 
	 EOF 
;

// Rule SequenceType
ruleSequenceType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='sequence<' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSequenceTypeAccess().getSequenceKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceTypeAccess().getTypeTypeRefParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"TypeRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='>' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSequenceTypeAccess().getGreaterThanSignKeyword_2());
    }
(
(
		lv_nullable_3_0=	'?' 
    {
        newLeafNode(lv_nullable_3_0, grammarAccess.getSequenceTypeAccess().getNullableQuestionMarkKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSequenceTypeRule());
	        }
       		setWithLastConsumed($current, "nullable", true, "?");
	    }

)
)?)
;





// Entry rule entryRuleScopedName
entryRuleScopedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getScopedNameRule()); } 
	 iv_ruleScopedName=ruleScopedName 
	 { $current=$iv_ruleScopedName.current.getText(); }  
	 EOF 
;

// Rule ScopedName
ruleScopedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getScopedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='::' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getScopedNameAccess().getColonColonKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getScopedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;







// Entry rule entryRuleConstructor
entryRuleConstructor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstructorRule()); }
	 iv_ruleConstructor=ruleConstructor 
	 { $current=$iv_ruleConstructor.current; } 
	 EOF 
;

// Rule Constructor
ruleConstructor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Constructor' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConstructorAccess().getConstructorKeyword_0());
    }
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getConstructorAccess().getConstructorAction_1(),
            $current);
    }
)(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConstructorAccess().getLeftParenthesisKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstructorAccess().getArgumentsArgumentParserRuleCall_2_1_0()); 
	    }
		lv_arguments_3_0=ruleArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstructorRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_3_0, 
        		"Argument");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConstructorAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstructorAccess().getArgumentsArgumentParserRuleCall_2_2_1_0()); 
	    }
		lv_arguments_5_0=ruleArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstructorRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_5_0, 
        		"Argument");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getConstructorAccess().getRightParenthesisKeyword_2_3());
    }
)?)
;





// Entry rule entryRuleNamedConstructor
entryRuleNamedConstructor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamedConstructorRule()); }
	 iv_ruleNamedConstructor=ruleNamedConstructor 
	 { $current=$iv_ruleNamedConstructor.current; } 
	 EOF 
;

// Rule NamedConstructor
ruleNamedConstructor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='NamedConstructor' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNamedConstructorAccess().getNamedConstructorKeyword_0());
    }
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getNamedConstructorAccess().getConstructorAction_1(),
            $current);
    }
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNamedConstructorAccess().getEqualsSignKeyword_2());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getNamedConstructorAccess().getNameIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedConstructorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)(	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getNamedConstructorAccess().getLeftParenthesisKeyword_4_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getNamedConstructorAccess().getArgumentsArgumentParserRuleCall_4_1_0_0()); 
	    }
		lv_arguments_5_0=ruleArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamedConstructorRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_5_0, 
        		"Argument");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getNamedConstructorAccess().getCommaKeyword_4_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNamedConstructorAccess().getArgumentsArgumentParserRuleCall_4_1_1_1_0()); 
	    }
		lv_arguments_7_0=ruleArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamedConstructorRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_7_0, 
        		"Argument");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getNamedConstructorAccess().getRightParenthesisKeyword_4_2());
    }
)?)
;





// Entry rule entryRuleCallback
entryRuleCallback returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCallbackRule()); }
	 iv_ruleCallback=ruleCallback 
	 { $current=$iv_ruleCallback.current; } 
	 EOF 
;

// Rule Callback
ruleCallback returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='Callback' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCallbackAccess().getCallbackKeyword_0_0());
    }
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getCallbackAccess().getCallbackAction_0_1(),
            $current);
    }
))
    |(	otherlv_2='Callback' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCallbackAccess().getCallbackKeyword_1_0());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCallbackAccess().getEqualsSignKeyword_1_1());
    }
(
(
		lv_functionOnly_4_0=	'FunctionOnly' 
    {
        newLeafNode(lv_functionOnly_4_0, grammarAccess.getCallbackAccess().getFunctionOnlyFunctionOnlyKeyword_1_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCallbackRule());
	        }
       		setWithLastConsumed($current, "functionOnly", true, "FunctionOnly");
	    }

)
))
    |(	otherlv_5='Callback' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCallbackAccess().getCallbackKeyword_2_0());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCallbackAccess().getEqualsSignKeyword_2_1());
    }
(
(
		lv_propertyOnly_7_0=	'PropertyOnly' 
    {
        newLeafNode(lv_propertyOnly_7_0, grammarAccess.getCallbackAccess().getPropertyOnlyPropertyOnlyKeyword_2_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCallbackRule());
	        }
       		setWithLastConsumed($current, "propertyOnly", true, "PropertyOnly");
	    }

)
)))
;





// Entry rule entryRuleNoInterfaceObject
entryRuleNoInterfaceObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNoInterfaceObjectRule()); }
	 iv_ruleNoInterfaceObject=ruleNoInterfaceObject 
	 { $current=$iv_ruleNoInterfaceObject.current; } 
	 EOF 
;

// Rule NoInterfaceObject
ruleNoInterfaceObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getNoInterfaceObjectAccess().getNoInterfaceObjectAction_0(),
            $current);
    }
)	otherlv_1='NoInterfaceObject' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNoInterfaceObjectAccess().getNoInterfaceObjectKeyword_1());
    }
)
;





// Entry rule entryRuleOverrideBuiltins
entryRuleOverrideBuiltins returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOverrideBuiltinsRule()); } 
	 iv_ruleOverrideBuiltins=ruleOverrideBuiltins 
	 { $current=$iv_ruleOverrideBuiltins.current.getText(); }  
	 EOF 
;

// Rule OverrideBuiltins
ruleOverrideBuiltins returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='OverrideBuiltins' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOverrideBuiltinsAccess().getOverrideBuiltinsKeyword()); 
    }

    ;





// Entry rule entryRulePrototypeRoot
entryRulePrototypeRoot returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrototypeRootRule()); }
	 iv_rulePrototypeRoot=rulePrototypeRoot 
	 { $current=$iv_rulePrototypeRoot.current; } 
	 EOF 
;

// Rule PrototypeRoot
rulePrototypeRoot returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrototypeRootAccess().getPrototypeRootAction_0(),
            $current);
    }
)	otherlv_1='PrototypeRoot' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPrototypeRootAccess().getPrototypeRootKeyword_1());
    }
)
;





// Entry rule entryRulePutForwards
entryRulePutForwards returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPutForwardsRule()); }
	 iv_rulePutForwards=rulePutForwards 
	 { $current=$iv_rulePutForwards.current; } 
	 EOF 
;

// Rule PutForwards
rulePutForwards returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='PutForwards' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPutForwardsAccess().getPutForwardsKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPutForwardsAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPutForwardsRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getPutForwardsAccess().getTargetAttributeCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleTreatNullAs
entryRuleTreatNullAs returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTreatNullAsRule()); }
	 iv_ruleTreatNullAs=ruleTreatNullAs 
	 { $current=$iv_ruleTreatNullAs.current; } 
	 EOF 
;

// Rule TreatNullAs
ruleTreatNullAs returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getTreatNullAsAccess().getTreatNullAsAction_0(),
            $current);
    }
)	otherlv_1='TreatNullAs' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTreatNullAsAccess().getTreatNullAsKeyword_1());
    }
	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTreatNullAsAccess().getEqualsSignKeyword_2());
    }
	otherlv_3='EmptyString' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTreatNullAsAccess().getEmptyStringKeyword_3());
    }
)
;





// Entry rule entryRuleTreatUndefinedAs
entryRuleTreatUndefinedAs returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTreatUndefinedAsRule()); }
	 iv_ruleTreatUndefinedAs=ruleTreatUndefinedAs 
	 { $current=$iv_ruleTreatUndefinedAs.current; } 
	 EOF 
;

// Rule TreatUndefinedAs
ruleTreatUndefinedAs returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getTreatUndefinedAsAccess().getTreatUndefinedAsAction_0_0(),
            $current);
    }
)	otherlv_1='TreatUndefinedAs' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTreatUndefinedAsAccess().getTreatUndefinedAsKeyword_0_1());
    }
	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTreatUndefinedAsAccess().getEqualsSignKeyword_0_2());
    }
(
(
		lv_asEmptyString_3_0=	'EmptyString' 
    {
        newLeafNode(lv_asEmptyString_3_0, grammarAccess.getTreatUndefinedAsAccess().getAsEmptyStringEmptyStringKeyword_0_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTreatUndefinedAsRule());
	        }
       		setWithLastConsumed($current, "asEmptyString", true, "EmptyString");
	    }

)
))
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getTreatUndefinedAsAccess().getTreatUndefinedAsAction_1_0(),
            $current);
    }
)	otherlv_5='TreatUndefinedAs' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTreatUndefinedAsAccess().getTreatUndefinedAsKeyword_1_1());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTreatUndefinedAsAccess().getEqualsSignKeyword_1_2());
    }
(
(
		lv_asNull_7_0=	'null' 
    {
        newLeafNode(lv_asNull_7_0, grammarAccess.getTreatUndefinedAsAccess().getAsNullNullKeyword_1_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTreatUndefinedAsRule());
	        }
       		setWithLastConsumed($current, "asNull", true, "null");
	    }

)
)))
;





// Entry rule entryRuleAllowAny
entryRuleAllowAny returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAllowAnyRule()); }
	 iv_ruleAllowAny=ruleAllowAny 
	 { $current=$iv_ruleAllowAny.current; } 
	 EOF 
;

// Rule AllowAny
ruleAllowAny returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getAllowAnyAccess().getAllowAnyAction_0(),
            $current);
    }
)	otherlv_1='AllowAny' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAllowAnyAccess().getAllowAnyKeyword_1());
    }
)
;





// Entry rule entryRuleReplaceable
entryRuleReplaceable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReplaceableRule()); }
	 iv_ruleReplaceable=ruleReplaceable 
	 { $current=$iv_ruleReplaceable.current; } 
	 EOF 
;

// Rule Replaceable
ruleReplaceable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getReplaceableAccess().getReplaceableAction_0(),
            $current);
    }
)	otherlv_1='Replaceable' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getReplaceableAccess().getReplaceableKeyword_1());
    }
)
;





// Entry rule entryRuleSupplemental
entryRuleSupplemental returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSupplementalRule()); }
	 iv_ruleSupplemental=ruleSupplemental 
	 { $current=$iv_ruleSupplemental.current; } 
	 EOF 
;

// Rule Supplemental
ruleSupplemental returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSupplementalAccess().getSupplementalAction_0(),
            $current);
    }
)	otherlv_1='Supplemental' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSupplementalAccess().getSupplementalKeyword_1());
    }
)
;





// Entry rule entryRuleReplaceableNamedProperties
entryRuleReplaceableNamedProperties returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReplaceableNamedPropertiesRule()); }
	 iv_ruleReplaceableNamedProperties=ruleReplaceableNamedProperties 
	 { $current=$iv_ruleReplaceableNamedProperties.current; } 
	 EOF 
;

// Rule ReplaceableNamedProperties
ruleReplaceableNamedProperties returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getReplaceableNamedPropertiesAccess().getReplaceableNamedPropertiesAction_0(),
            $current);
    }
)	otherlv_1='ReplaceableNamedProperties' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getReplaceableNamedPropertiesAccess().getReplaceableNamedPropertiesKeyword_1());
    }
)
;





// Entry rule entryRuleAbstractDefinitions
entryRuleAbstractDefinitions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractDefinitionsRule()); }
	 iv_ruleAbstractDefinitions=ruleAbstractDefinitions 
	 { $current=$iv_ruleAbstractDefinitions.current; } 
	 EOF 
;

// Rule AbstractDefinitions
ruleAbstractDefinitions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractDefinitionsAccess().getDefinitionsParserRuleCall_0()); 
    }
    this_Definitions_0=ruleDefinitions
    { 
        $current = $this_Definitions_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAbstractDefinitionsAccess().getModuleParserRuleCall_1()); 
    }
    this_Module_1=ruleModule
    { 
        $current = $this_Module_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDefinitions
entryRuleDefinitions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefinitionsRule()); }
	 iv_ruleDefinitions=ruleDefinitions 
	 { $current=$iv_ruleDefinitions.current; } 
	 EOF 
;

// Rule Definitions
ruleDefinitions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDefinitionsAccess().getInterfaceParserRuleCall_0()); 
    }
    this_Interface_0=ruleInterface
    { 
        $current = $this_Interface_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDefinitionsAccess().getExceptionParserRuleCall_1()); 
    }
    this_Exception_1=ruleException
    { 
        $current = $this_Exception_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDefinitionsAccess().getTypeDefParserRuleCall_2()); 
    }
    this_TypeDef_2=ruleTypeDef
    { 
        $current = $this_TypeDef_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDefinitionsAccess().getImplementStatementParserRuleCall_3()); 
    }
    this_ImplementStatement_3=ruleImplementStatement
    { 
        $current = $this_ImplementStatement_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleImplementStatement
entryRuleImplementStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImplementStatementRule()); }
	 iv_ruleImplementStatement=ruleImplementStatement 
	 { $current=$iv_ruleImplementStatement.current; } 
	 EOF 
;

// Rule ImplementStatement
ruleImplementStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getImplementStatementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getImplementStatementAccess().getSourceInterfaceCrossReference_0_0()); 
	    }
		ruleScopedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='implements' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getImplementStatementAccess().getImplementsKeyword_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getImplementStatementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getImplementStatementAccess().getTargetInterfaceCrossReference_2_0()); 
	    }
		ruleScopedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getImplementStatementAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleModule
entryRuleModule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModuleRule()); }
	 iv_ruleModule=ruleModule 
	 { $current=$iv_ruleModule.current; } 
	 EOF 
;

// Rule Module
ruleModule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModuleAccess().getLeftSquareBracketKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModuleAccess().getExtendedAttributesModuleExtendedAttributeParserRuleCall_0_1_0()); 
	    }
		lv_extendedAttributes_1_0=ruleModuleExtendedAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModuleRule());
	        }
       		add(
       			$current, 
       			"extendedAttributes",
        		lv_extendedAttributes_1_0, 
        		"ModuleExtendedAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getModuleAccess().getCommaKeyword_0_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModuleAccess().getExtendedAttributesModuleExtendedAttributeParserRuleCall_0_2_1_0()); 
	    }
		lv_extendedAttributes_3_0=ruleModuleExtendedAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModuleRule());
	        }
       		add(
       			$current, 
       			"extendedAttributes",
        		lv_extendedAttributes_3_0, 
        		"ModuleExtendedAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getModuleAccess().getRightSquareBracketKeyword_0_3());
    }
)?	otherlv_5='module' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getModuleAccess().getModuleKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModuleAccess().getNameScopedNameParserRuleCall_2_0()); 
	    }
		lv_name_6_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModuleRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_6_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getModuleAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModuleAccess().getDefinitionsAbstractDefinitionsParserRuleCall_4_0()); 
	    }
		lv_definitions_8_0=ruleAbstractDefinitions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModuleRule());
	        }
       		add(
       			$current, 
       			"definitions",
        		lv_definitions_8_0, 
        		"AbstractDefinitions");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getModuleAccess().getRightCurlyBracketKeyword_5());
    }
	otherlv_10=';' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getModuleAccess().getSemicolonKeyword_6());
    }
)
;





// Entry rule entryRuleModuleExtendedAttribute
entryRuleModuleExtendedAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModuleExtendedAttributeRule()); }
	 iv_ruleModuleExtendedAttribute=ruleModuleExtendedAttribute 
	 { $current=$iv_ruleModuleExtendedAttribute.current; } 
	 EOF 
;

// Rule ModuleExtendedAttribute
ruleModuleExtendedAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getModuleExtendedAttributeAccess().getPrefixParserRuleCall_0()); 
    }
    this_Prefix_0=rulePrefix
    { 
        $current = $this_Prefix_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getModuleExtendedAttributeAccess().getNamespaceObjectParserRuleCall_1()); 
    }
    this_NamespaceObject_1=ruleNamespaceObject
    { 
        $current = $this_NamespaceObject_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePrefix
entryRulePrefix returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrefixRule()); }
	 iv_rulePrefix=rulePrefix 
	 { $current=$iv_rulePrefix.current; } 
	 EOF 
;

// Rule Prefix
rulePrefix returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Prefix' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPrefixAccess().getPrefixKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPrefixAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrefixAccess().getValueScopedNameParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrefixRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleNamespaceObject
entryRuleNamespaceObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamespaceObjectRule()); }
	 iv_ruleNamespaceObject=ruleNamespaceObject 
	 { $current=$iv_ruleNamespaceObject.current; } 
	 EOF 
;

// Rule NamespaceObject
ruleNamespaceObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='NamespaceObject' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNamespaceObjectAccess().getNamespaceObjectKeyword_0());
    }
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getNamespaceObjectAccess().getNamespaceObjectAction_1(),
            $current);
    }
))
;





// Entry rule entryRuleInterface
entryRuleInterface returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfaceRule()); }
	 iv_ruleInterface=ruleInterface 
	 { $current=$iv_ruleInterface.current; } 
	 EOF 
;

// Rule Interface
ruleInterface returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInterfaceAccess().getLeftSquareBracketKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceAccess().getExtendedAttributesInterfaceExtendedAttributeParserRuleCall_0_1_0()); 
	    }
		lv_extendedAttributes_1_0=ruleInterfaceExtendedAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceRule());
	        }
       		add(
       			$current, 
       			"extendedAttributes",
        		lv_extendedAttributes_1_0, 
        		"InterfaceExtendedAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInterfaceAccess().getCommaKeyword_0_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceAccess().getExtendedAttributeInterfaceExtendedAttributeParserRuleCall_0_2_1_0()); 
	    }
		lv_extendedAttribute_3_0=ruleInterfaceExtendedAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceRule());
	        }
       		add(
       			$current, 
       			"extendedAttribute",
        		lv_extendedAttribute_3_0, 
        		"InterfaceExtendedAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInterfaceAccess().getRightSquareBracketKeyword_0_3());
    }
)?	otherlv_5='interface' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInterfaceAccess().getInterfaceKeyword_1());
    }
(
(
		lv_name_6_0=RULE_ID
		{
			newLeafNode(lv_name_6_0, grammarAccess.getInterfaceAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInterfaceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_6_0, 
        		"ID");
	    }

)
)((	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInterfaceAccess().getColonKeyword_3_0_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInterfaceRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getInterfaceAccess().getSuperTypeInterfaceCrossReference_3_0_1_0()); 
	    }
		ruleScopedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getInterfaceAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInterfaceRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getInterfaceAccess().getSuperTypeInterfaceCrossReference_3_1_1_0()); 
	    }
		ruleScopedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getInterfaceAccess().getLeftCurlyBracketKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceAccess().getMembersInterfaceMemberParserRuleCall_4_1_0()); 
	    }
		lv_members_12_0=ruleInterfaceMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_12_0, 
        		"InterfaceMember");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getInterfaceAccess().getRightCurlyBracketKeyword_4_2());
    }
)?	otherlv_14=';' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getInterfaceAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRuleInterfaceExtendedAttribute
entryRuleInterfaceExtendedAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfaceExtendedAttributeRule()); }
	 iv_ruleInterfaceExtendedAttribute=ruleInterfaceExtendedAttribute 
	 { $current=$iv_ruleInterfaceExtendedAttribute.current; } 
	 EOF 
;

// Rule InterfaceExtendedAttribute
ruleInterfaceExtendedAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInterfaceExtendedAttributeAccess().getCallbackParserRuleCall_0()); 
    }
    this_Callback_0=ruleCallback
    { 
        $current = $this_Callback_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInterfaceExtendedAttributeAccess().getConstructorParserRuleCall_1()); 
    }
    this_Constructor_1=ruleConstructor
    { 
        $current = $this_Constructor_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInterfaceExtendedAttributeAccess().getNamedConstructorParserRuleCall_2()); 
    }
    this_NamedConstructor_2=ruleNamedConstructor
    { 
        $current = $this_NamedConstructor_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInterfaceExtendedAttributeAccess().getNoInterfaceObjectParserRuleCall_3()); 
    }
    this_NoInterfaceObject_3=ruleNoInterfaceObject
    { 
        $current = $this_NoInterfaceObject_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInterfaceExtendedAttributeAccess().getPrototypeRootParserRuleCall_4()); 
    }
    this_PrototypeRoot_4=rulePrototypeRoot
    { 
        $current = $this_PrototypeRoot_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInterfaceExtendedAttributeAccess().getSupplementalParserRuleCall_5()); 
    }
    this_Supplemental_5=ruleSupplemental
    { 
        $current = $this_Supplemental_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInterfaceExtendedAttributeAccess().getOverrideBuiltinsParserRuleCall_6()); 
    }
ruleOverrideBuiltins
    { 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInterfaceExtendedAttributeAccess().getReplaceableNamedPropertiesParserRuleCall_7()); 
    }
    this_ReplaceableNamedProperties_7=ruleReplaceableNamedProperties
    { 
        $current = $this_ReplaceableNamedProperties_7.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInterfaceMember
entryRuleInterfaceMember returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfaceMemberRule()); }
	 iv_ruleInterfaceMember=ruleInterfaceMember 
	 { $current=$iv_ruleInterfaceMember.current; } 
	 EOF 
;

// Rule InterfaceMember
ruleInterfaceMember returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInterfaceMemberAccess().getConstParserRuleCall_0()); 
    }
    this_Const_0=ruleConst
    { 
        $current = $this_Const_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInterfaceMemberAccess().getInterfaceFeatureParserRuleCall_1()); 
    }
    this_InterfaceFeature_1=ruleInterfaceFeature
    { 
        $current = $this_InterfaceFeature_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInterfaceFeature
entryRuleInterfaceFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfaceFeatureRule()); }
	 iv_ruleInterfaceFeature=ruleInterfaceFeature 
	 { $current=$iv_ruleInterfaceFeature.current; } 
	 EOF 
;

// Rule InterfaceFeature
ruleInterfaceFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInterfaceFeatureAccess().getAttributeParserRuleCall_0()); 
    }
    this_Attribute_0=ruleAttribute
    { 
        $current = $this_Attribute_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInterfaceFeatureAccess().getOperationParserRuleCall_1()); 
    }
    this_Operation_1=ruleOperation
    { 
        $current = $this_Operation_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	 iv_ruleOperation=ruleOperation 
	 { $current=$iv_ruleOperation.current; } 
	 EOF 
;

// Rule Operation
ruleOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOperationAccess().getLeftSquareBracketKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getExtendedAttributesOperationExtendedAttributeParserRuleCall_0_1_0()); 
	    }
		lv_extendedAttributes_1_0=ruleOperationExtendedAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		add(
       			$current, 
       			"extendedAttributes",
        		lv_extendedAttributes_1_0, 
        		"OperationExtendedAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOperationAccess().getCommaKeyword_0_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getExtendedAttributesOperationExtendedAttributeParserRuleCall_0_2_1_0()); 
	    }
		lv_extendedAttributes_3_0=ruleOperationExtendedAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		add(
       			$current, 
       			"extendedAttributes",
        		lv_extendedAttributes_3_0, 
        		"OperationExtendedAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOperationAccess().getRightSquareBracketKeyword_0_3());
    }
)?(
(
		lv_stringifier_5_0=	'stringifier' 
    {
        newLeafNode(lv_stringifier_5_0, grammarAccess.getOperationAccess().getStringifierStringifierKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperationRule());
	        }
       		setWithLastConsumed($current, "stringifier", true, "stringifier");
	    }

)
)?(
(
		lv_omittable_6_0=	'omittable' 
    {
        newLeafNode(lv_omittable_6_0, grammarAccess.getOperationAccess().getOmittableOmittableKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperationRule());
	        }
       		setWithLastConsumed($current, "omittable", true, "omittable");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getSpecialsOperationSpecialParserRuleCall_3_0()); 
	    }
		lv_specials_7_0=ruleOperationSpecial		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		add(
       			$current, 
       			"specials",
        		lv_specials_7_0, 
        		"OperationSpecial");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getReturnTypeRefParserRuleCall_4_0()); 
	    }
		lv_return_8_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		set(
       			$current, 
       			"return",
        		lv_return_8_0, 
        		"TypeRef");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_9_0=RULE_ID
		{
			newLeafNode(lv_name_9_0, grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_9_0, 
        		"ID");
	    }

)
)?	otherlv_10='(' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getOperationAccess().getLeftParenthesisKeyword_6());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getArgumentsArgumentParserRuleCall_7_0_0()); 
	    }
		lv_arguments_11_0=ruleArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_11_0, 
        		"Argument");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getOperationAccess().getCommaKeyword_7_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getArgumentsArgumentParserRuleCall_7_1_1_0()); 
	    }
		lv_arguments_13_0=ruleArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_13_0, 
        		"Argument");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_14=')' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getOperationAccess().getRightParenthesisKeyword_8());
    }
(	otherlv_15='raises' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getOperationAccess().getRaisesKeyword_9_0());
    }
	otherlv_16='(' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getOperationAccess().getLeftParenthesisKeyword_9_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getRaisesExceptionCrossReference_9_2_0()); 
	    }
		ruleScopedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_18=',' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getOperationAccess().getCommaKeyword_9_3_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getRaisesExceptionCrossReference_9_3_1_0()); 
	    }
		ruleScopedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_20=')' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getOperationAccess().getRightParenthesisKeyword_9_4());
    }
)?	otherlv_21=';' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getOperationAccess().getSemicolonKeyword_10());
    }
)
;





// Entry rule entryRuleOperationExtendedAttribute
entryRuleOperationExtendedAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperationExtendedAttributeRule()); }
	 iv_ruleOperationExtendedAttribute=ruleOperationExtendedAttribute 
	 { $current=$iv_ruleOperationExtendedAttribute.current; } 
	 EOF 
;

// Rule OperationExtendedAttribute
ruleOperationExtendedAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOperationExtendedAttributeAccess().getTreatNullAsParserRuleCall_0()); 
    }
    this_TreatNullAs_0=ruleTreatNullAs
    { 
        $current = $this_TreatNullAs_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOperationExtendedAttributeAccess().getTreatUndefinedAsParserRuleCall_1()); 
    }
    this_TreatUndefinedAs_1=ruleTreatUndefinedAs
    { 
        $current = $this_TreatUndefinedAs_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleOperationSpecial
entryRuleOperationSpecial returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperationSpecialRule()); }
	 iv_ruleOperationSpecial=ruleOperationSpecial 
	 { $current=$iv_ruleOperationSpecial.current; } 
	 EOF 
;

// Rule OperationSpecial
ruleOperationSpecial returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getOperationSpecialAccess().getOperationSpecialGetterAction_0_0(),
            $current);
    }
)	otherlv_1='getter' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOperationSpecialAccess().getGetterKeyword_0_1());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getOperationSpecialAccess().getOperationSpecialSetterAction_1_0(),
            $current);
    }
)	otherlv_3='setter' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOperationSpecialAccess().getSetterKeyword_1_1());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getOperationSpecialAccess().getOperationSpecialCreatorAction_2_0(),
            $current);
    }
)	otherlv_5='creator' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOperationSpecialAccess().getCreatorKeyword_2_1());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getOperationSpecialAccess().getOperationSpecialDeleterAction_3_0(),
            $current);
    }
)	otherlv_7='deleter' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getOperationSpecialAccess().getDeleterKeyword_3_1());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getOperationSpecialAccess().getOperationSpecialCallerAction_4_0(),
            $current);
    }
)	otherlv_9='caller' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getOperationSpecialAccess().getCallerKeyword_4_1());
    }
))
;





// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	 iv_ruleAttribute=ruleAttribute 
	 { $current=$iv_ruleAttribute.current; } 
	 EOF 
;

// Rule Attribute
ruleAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributeAccess().getLeftSquareBracketKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getExtendedAttributesAttributeExtendedAttributeParserRuleCall_0_1_0()); 
	    }
		lv_extendedAttributes_1_0=ruleAttributeExtendedAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		add(
       			$current, 
       			"extendedAttributes",
        		lv_extendedAttributes_1_0, 
        		"AttributeExtendedAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAttributeAccess().getCommaKeyword_0_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getExtendedAttributesAttributeExtendedAttributeParserRuleCall_0_2_1_0()); 
	    }
		lv_extendedAttributes_3_0=ruleAttributeExtendedAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		add(
       			$current, 
       			"extendedAttributes",
        		lv_extendedAttributes_3_0, 
        		"AttributeExtendedAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAttributeAccess().getRightSquareBracketKeyword_0_3());
    }
)?(
(
		lv_stringifier_5_0=	'stringifier' 
    {
        newLeafNode(lv_stringifier_5_0, grammarAccess.getAttributeAccess().getStringifierStringifierKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed($current, "stringifier", true, "stringifier");
	    }

)
)?(	otherlv_6='readonly' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAttributeAccess().getReadonlyKeyword_2());
    }
)?	otherlv_7='attribute' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAttributeAccess().getAttributeKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getTypeTypeRefParserRuleCall_4_0()); 
	    }
		lv_type_8_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_8_0, 
        		"TypeRef");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getNameScopedNameParserRuleCall_5_0()); 
	    }
		lv_name_9_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_9_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_10='getraises' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getAttributeAccess().getGetraisesKeyword_6_0_0());
    }
	otherlv_11='(' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getAttributeAccess().getLeftParenthesisKeyword_6_0_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getGetRaisesExceptionCrossReference_6_0_2_0()); 
	    }
		ruleScopedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getAttributeAccess().getCommaKeyword_6_0_3_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getGetRaisesExceptionCrossReference_6_0_3_1_0()); 
	    }
		ruleScopedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_15=')' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getAttributeAccess().getRightParenthesisKeyword_6_0_4());
    }
)?(	otherlv_16='setraises' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getAttributeAccess().getSetraisesKeyword_6_1_0());
    }
	otherlv_17='(' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getAttributeAccess().getLeftParenthesisKeyword_6_1_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getSetRaisesExceptionCrossReference_6_1_2_0()); 
	    }
		ruleScopedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_19=',' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getAttributeAccess().getCommaKeyword_6_1_3_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getSetRaisesExceptionCrossReference_6_1_3_1_0()); 
	    }
		ruleScopedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_21=')' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getAttributeAccess().getRightParenthesisKeyword_6_1_4());
    }
)?)	otherlv_22=';' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getAttributeAccess().getSemicolonKeyword_7());
    }
)
;





// Entry rule entryRuleAttributeExtendedAttribute
entryRuleAttributeExtendedAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeExtendedAttributeRule()); }
	 iv_ruleAttributeExtendedAttribute=ruleAttributeExtendedAttribute 
	 { $current=$iv_ruleAttributeExtendedAttribute.current; } 
	 EOF 
;

// Rule AttributeExtendedAttribute
ruleAttributeExtendedAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAttributeExtendedAttributeAccess().getPutForwardsParserRuleCall_0()); 
    }
    this_PutForwards_0=rulePutForwards
    { 
        $current = $this_PutForwards_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAttributeExtendedAttributeAccess().getReplaceableParserRuleCall_1()); 
    }
    this_Replaceable_1=ruleReplaceable
    { 
        $current = $this_Replaceable_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAttributeExtendedAttributeAccess().getTreatNullAsParserRuleCall_2()); 
    }
    this_TreatNullAs_2=ruleTreatNullAs
    { 
        $current = $this_TreatNullAs_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAttributeExtendedAttributeAccess().getTreatUndefinedAsParserRuleCall_3()); 
    }
    this_TreatUndefinedAs_3=ruleTreatUndefinedAs
    { 
        $current = $this_TreatUndefinedAs_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleException
entryRuleException returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExceptionRule()); }
	 iv_ruleException=ruleException 
	 { $current=$iv_ruleException.current; } 
	 EOF 
;

// Rule Exception
ruleException returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExceptionAccess().getLeftSquareBracketKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExceptionAccess().getExtendedAttributesExceptionExtendedAttributeParserRuleCall_0_1_0()); 
	    }
		lv_extendedAttributes_1_0=ruleExceptionExtendedAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExceptionRule());
	        }
       		add(
       			$current, 
       			"extendedAttributes",
        		lv_extendedAttributes_1_0, 
        		"ExceptionExtendedAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExceptionAccess().getCommaKeyword_0_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExceptionAccess().getExtendedAttributesExceptionExtendedAttributeParserRuleCall_0_2_1_0()); 
	    }
		lv_extendedAttributes_3_0=ruleExceptionExtendedAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExceptionRule());
	        }
       		add(
       			$current, 
       			"extendedAttributes",
        		lv_extendedAttributes_3_0, 
        		"ExceptionExtendedAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExceptionAccess().getRightSquareBracketKeyword_0_3());
    }
)?	otherlv_5='exception' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExceptionAccess().getExceptionKeyword_1());
    }
(
(
		lv_name_6_0=RULE_ID
		{
			newLeafNode(lv_name_6_0, grammarAccess.getExceptionAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExceptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_6_0, 
        		"ID");
	    }

)
)	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getExceptionAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExceptionAccess().getMembersExceptionMemberParserRuleCall_4_0()); 
	    }
		lv_members_8_0=ruleExceptionMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExceptionRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_8_0, 
        		"ExceptionMember");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getExceptionAccess().getRightCurlyBracketKeyword_5());
    }
	otherlv_10=';' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getExceptionAccess().getSemicolonKeyword_6());
    }
)
;





// Entry rule entryRuleExceptionMember
entryRuleExceptionMember returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExceptionMemberRule()); }
	 iv_ruleExceptionMember=ruleExceptionMember 
	 { $current=$iv_ruleExceptionMember.current; } 
	 EOF 
;

// Rule ExceptionMember
ruleExceptionMember returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExceptionMemberAccess().getConstParserRuleCall_0()); 
    }
    this_Const_0=ruleConst
    { 
        $current = $this_Const_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExceptionMemberAccess().getExceptionFieldParserRuleCall_1()); 
    }
    this_ExceptionField_1=ruleExceptionField
    { 
        $current = $this_ExceptionField_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleExceptionField
entryRuleExceptionField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExceptionFieldRule()); }
	 iv_ruleExceptionField=ruleExceptionField 
	 { $current=$iv_ruleExceptionField.current; } 
	 EOF 
;

// Rule ExceptionField
ruleExceptionField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getExceptionFieldAccess().getTypeTypeRefParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExceptionFieldRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"TypeRef");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getExceptionFieldAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExceptionFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExceptionFieldAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleExceptionExtendedAttribute
entryRuleExceptionExtendedAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExceptionExtendedAttributeRule()); }
	 iv_ruleExceptionExtendedAttribute=ruleExceptionExtendedAttribute 
	 { $current=$iv_ruleExceptionExtendedAttribute.current; } 
	 EOF 
;

// Rule ExceptionExtendedAttribute
ruleExceptionExtendedAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExceptionExtendedAttributeAccess().getNoInterfaceObjectParserRuleCall()); 
    }
    this_NoInterfaceObject_0=ruleNoInterfaceObject
    { 
        $current = $this_NoInterfaceObject_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleArgument
entryRuleArgument returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgumentRule()); }
	 iv_ruleArgument=ruleArgument 
	 { $current=$iv_ruleArgument.current; } 
	 EOF 
;

// Rule Argument
ruleArgument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getArgumentAccess().getLeftSquareBracketKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentAccess().getExtendedAttributesArgumentExtendedAttributeParserRuleCall_0_1_0()); 
	    }
		lv_extendedAttributes_1_0=ruleArgumentExtendedAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentRule());
	        }
       		add(
       			$current, 
       			"extendedAttributes",
        		lv_extendedAttributes_1_0, 
        		"ArgumentExtendedAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getArgumentAccess().getCommaKeyword_0_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentAccess().getExtendedAttributesArgumentExtendedAttributeParserRuleCall_0_2_1_0()); 
	    }
		lv_extendedAttributes_3_0=ruleArgumentExtendedAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentRule());
	        }
       		add(
       			$current, 
       			"extendedAttributes",
        		lv_extendedAttributes_3_0, 
        		"ArgumentExtendedAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getArgumentAccess().getRightSquareBracketKeyword_0_3());
    }
)?(
(
		lv_in_5_0=	'in' 
    {
        newLeafNode(lv_in_5_0, grammarAccess.getArgumentAccess().getInInKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArgumentRule());
	        }
       		setWithLastConsumed($current, "in", true, "in");
	    }

)
)?(
(
		lv_optional_6_0=	'optional' 
    {
        newLeafNode(lv_optional_6_0, grammarAccess.getArgumentAccess().getOptionalOptionalKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArgumentRule());
	        }
       		setWithLastConsumed($current, "optional", true, "optional");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentAccess().getTypeTypeRefParserRuleCall_3_0()); 
	    }
		lv_type_7_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_7_0, 
        		"TypeRef");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_ellipsis_8_0=	'...' 
    {
        newLeafNode(lv_ellipsis_8_0, grammarAccess.getArgumentAccess().getEllipsisFullStopFullStopFullStopKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArgumentRule());
	        }
       		setWithLastConsumed($current, "ellipsis", true, "...");
	    }

)
)?(
(
		lv_name_9_0=RULE_ID
		{
			newLeafNode(lv_name_9_0, grammarAccess.getArgumentAccess().getNameIDTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArgumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_9_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleArgumentExtendedAttribute
entryRuleArgumentExtendedAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgumentExtendedAttributeRule()); }
	 iv_ruleArgumentExtendedAttribute=ruleArgumentExtendedAttribute 
	 { $current=$iv_ruleArgumentExtendedAttribute.current; } 
	 EOF 
;

// Rule ArgumentExtendedAttribute
ruleArgumentExtendedAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getArgumentExtendedAttributeAccess().getAllowAnyParserRuleCall_0()); 
    }
    this_AllowAny_0=ruleAllowAny
    { 
        $current = $this_AllowAny_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getArgumentExtendedAttributeAccess().getTreatNullAsParserRuleCall_1()); 
    }
    this_TreatNullAs_1=ruleTreatNullAs
    { 
        $current = $this_TreatNullAs_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getArgumentExtendedAttributeAccess().getTreatUndefinedAsParserRuleCall_2()); 
    }
    this_TreatUndefinedAs_2=ruleTreatUndefinedAs
    { 
        $current = $this_TreatUndefinedAs_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleConst
entryRuleConst returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstRule()); }
	 iv_ruleConst=ruleConst 
	 { $current=$iv_ruleConst.current; } 
	 EOF 
;

// Rule Const
ruleConst returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='const' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConstAccess().getConstKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstAccess().getTypeTypeRefParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleTypeRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"TypeRef");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getConstAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConstAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstAccess().getExprConstExprParserRuleCall_4_0()); 
	    }
		lv_expr_4_0=ruleConstExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_4_0, 
        		"ConstExpr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConstAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRuleConstExpr
entryRuleConstExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstExprRule()); }
	 iv_ruleConstExpr=ruleConstExpr 
	 { $current=$iv_ruleConstExpr.current; } 
	 EOF 
;

// Rule ConstExpr
ruleConstExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getConstExprAccess().getConstExprAction_0_0(),
            $current);
    }
)this_STRING_1=RULE_STRING
    { 
    newLeafNode(this_STRING_1, grammarAccess.getConstExprAccess().getSTRINGTerminalRuleCall_0_1()); 
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getConstExprAccess().getConstExprAction_1_0(),
            $current);
    }
)(	otherlv_3='0x' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConstExprAccess().getXKeyword_1_1());
    }
)?this_INT_4=RULE_INT
    { 
    newLeafNode(this_INT_4, grammarAccess.getConstExprAccess().getINTTerminalRuleCall_1_2()); 
    }
))
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


