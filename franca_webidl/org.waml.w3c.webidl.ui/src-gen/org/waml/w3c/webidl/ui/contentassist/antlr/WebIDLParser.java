/*
* generated by Xtext
*/
package org.waml.w3c.webidl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.waml.w3c.webidl.services.WebIDLGrammarAccess;

public class WebIDLParser extends AbstractContentAssistParser {
	
	@Inject
	private WebIDLGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.waml.w3c.webidl.ui.contentassist.antlr.internal.InternalWebIDLParser createParser() {
		org.waml.w3c.webidl.ui.contentassist.antlr.internal.InternalWebIDLParser result = new org.waml.w3c.webidl.ui.contentassist.antlr.internal.InternalWebIDLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getTypeRefAccess().getAlternatives(), "rule__TypeRef__Alternatives");
					put(grammarAccess.getTypesAccess().getAlternatives(), "rule__Types__Alternatives");
					put(grammarAccess.getPrimitiveTypeRefAccess().getNameAlternatives_1_0(), "rule__PrimitiveTypeRef__NameAlternatives_1_0");
					put(grammarAccess.getCallbackAccess().getAlternatives(), "rule__Callback__Alternatives");
					put(grammarAccess.getTreatUndefinedAsAccess().getAlternatives(), "rule__TreatUndefinedAs__Alternatives");
					put(grammarAccess.getAbstractDefinitionsAccess().getAlternatives(), "rule__AbstractDefinitions__Alternatives");
					put(grammarAccess.getDefinitionsAccess().getAlternatives(), "rule__Definitions__Alternatives");
					put(grammarAccess.getModuleExtendedAttributeAccess().getAlternatives(), "rule__ModuleExtendedAttribute__Alternatives");
					put(grammarAccess.getInterfaceExtendedAttributeAccess().getAlternatives(), "rule__InterfaceExtendedAttribute__Alternatives");
					put(grammarAccess.getInterfaceMemberAccess().getAlternatives(), "rule__InterfaceMember__Alternatives");
					put(grammarAccess.getInterfaceFeatureAccess().getAlternatives(), "rule__InterfaceFeature__Alternatives");
					put(grammarAccess.getOperationExtendedAttributeAccess().getAlternatives(), "rule__OperationExtendedAttribute__Alternatives");
					put(grammarAccess.getOperationSpecialAccess().getAlternatives(), "rule__OperationSpecial__Alternatives");
					put(grammarAccess.getAttributeExtendedAttributeAccess().getAlternatives(), "rule__AttributeExtendedAttribute__Alternatives");
					put(grammarAccess.getExceptionMemberAccess().getAlternatives(), "rule__ExceptionMember__Alternatives");
					put(grammarAccess.getArgumentExtendedAttributeAccess().getAlternatives(), "rule__ArgumentExtendedAttribute__Alternatives");
					put(grammarAccess.getConstExprAccess().getAlternatives(), "rule__ConstExpr__Alternatives");
					put(grammarAccess.getIDLDefinitionsAccess().getGroup(), "rule__IDLDefinitions__Group__0");
					put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
					put(grammarAccess.getTypeDefAccess().getGroup(), "rule__TypeDef__Group__0");
					put(grammarAccess.getTypeRefAccess().getGroup_0(), "rule__TypeRef__Group_0__0");
					put(grammarAccess.getTypeRefAccess().getGroup_1(), "rule__TypeRef__Group_1__0");
					put(grammarAccess.getTypeRefAccess().getGroup_2(), "rule__TypeRef__Group_2__0");
					put(grammarAccess.getPrimitiveTypeRefAccess().getGroup(), "rule__PrimitiveTypeRef__Group__0");
					put(grammarAccess.getSequenceTypeAccess().getGroup(), "rule__SequenceType__Group__0");
					put(grammarAccess.getScopedNameAccess().getGroup(), "rule__ScopedName__Group__0");
					put(grammarAccess.getScopedNameAccess().getGroup_1(), "rule__ScopedName__Group_1__0");
					put(grammarAccess.getCallableAccess().getGroup(), "rule__Callable__Group__0");
					put(grammarAccess.getConstructorAccess().getGroup(), "rule__Constructor__Group__0");
					put(grammarAccess.getConstructorAccess().getGroup_2(), "rule__Constructor__Group_2__0");
					put(grammarAccess.getConstructorAccess().getGroup_2_2(), "rule__Constructor__Group_2_2__0");
					put(grammarAccess.getNamedConstructorAccess().getGroup(), "rule__NamedConstructor__Group__0");
					put(grammarAccess.getNamedConstructorAccess().getGroup_4(), "rule__NamedConstructor__Group_4__0");
					put(grammarAccess.getNamedConstructorAccess().getGroup_4_1(), "rule__NamedConstructor__Group_4_1__0");
					put(grammarAccess.getNamedConstructorAccess().getGroup_4_1_1(), "rule__NamedConstructor__Group_4_1_1__0");
					put(grammarAccess.getCallbackAccess().getGroup_0(), "rule__Callback__Group_0__0");
					put(grammarAccess.getCallbackAccess().getGroup_1(), "rule__Callback__Group_1__0");
					put(grammarAccess.getCallbackAccess().getGroup_2(), "rule__Callback__Group_2__0");
					put(grammarAccess.getNoInterfaceObjectAccess().getGroup(), "rule__NoInterfaceObject__Group__0");
					put(grammarAccess.getPrototypeRootAccess().getGroup(), "rule__PrototypeRoot__Group__0");
					put(grammarAccess.getPutForwardsAccess().getGroup(), "rule__PutForwards__Group__0");
					put(grammarAccess.getTreatNullAsAccess().getGroup(), "rule__TreatNullAs__Group__0");
					put(grammarAccess.getTreatUndefinedAsAccess().getGroup_0(), "rule__TreatUndefinedAs__Group_0__0");
					put(grammarAccess.getTreatUndefinedAsAccess().getGroup_1(), "rule__TreatUndefinedAs__Group_1__0");
					put(grammarAccess.getAllowAnyAccess().getGroup(), "rule__AllowAny__Group__0");
					put(grammarAccess.getReplaceableAccess().getGroup(), "rule__Replaceable__Group__0");
					put(grammarAccess.getSupplementalAccess().getGroup(), "rule__Supplemental__Group__0");
					put(grammarAccess.getReplaceableNamedPropertiesAccess().getGroup(), "rule__ReplaceableNamedProperties__Group__0");
					put(grammarAccess.getImplementStatementAccess().getGroup(), "rule__ImplementStatement__Group__0");
					put(grammarAccess.getModuleAccess().getGroup(), "rule__Module__Group__0");
					put(grammarAccess.getModuleAccess().getGroup_0(), "rule__Module__Group_0__0");
					put(grammarAccess.getModuleAccess().getGroup_0_2(), "rule__Module__Group_0_2__0");
					put(grammarAccess.getPrefixAccess().getGroup(), "rule__Prefix__Group__0");
					put(grammarAccess.getNamespaceObjectAccess().getGroup(), "rule__NamespaceObject__Group__0");
					put(grammarAccess.getInterfaceAccess().getGroup(), "rule__Interface__Group__0");
					put(grammarAccess.getInterfaceAccess().getGroup_0(), "rule__Interface__Group_0__0");
					put(grammarAccess.getInterfaceAccess().getGroup_0_2(), "rule__Interface__Group_0_2__0");
					put(grammarAccess.getInterfaceAccess().getGroup_3(), "rule__Interface__Group_3__0");
					put(grammarAccess.getInterfaceAccess().getGroup_3_0(), "rule__Interface__Group_3_0__0");
					put(grammarAccess.getInterfaceAccess().getGroup_3_1(), "rule__Interface__Group_3_1__0");
					put(grammarAccess.getInterfaceAccess().getGroup_4(), "rule__Interface__Group_4__0");
					put(grammarAccess.getOperationAccess().getGroup(), "rule__Operation__Group__0");
					put(grammarAccess.getOperationAccess().getGroup_0(), "rule__Operation__Group_0__0");
					put(grammarAccess.getOperationAccess().getGroup_0_2(), "rule__Operation__Group_0_2__0");
					put(grammarAccess.getOperationAccess().getGroup_7(), "rule__Operation__Group_7__0");
					put(grammarAccess.getOperationAccess().getGroup_7_1(), "rule__Operation__Group_7_1__0");
					put(grammarAccess.getOperationAccess().getGroup_9(), "rule__Operation__Group_9__0");
					put(grammarAccess.getOperationAccess().getGroup_9_3(), "rule__Operation__Group_9_3__0");
					put(grammarAccess.getOperationSpecialAccess().getGroup_0(), "rule__OperationSpecial__Group_0__0");
					put(grammarAccess.getOperationSpecialAccess().getGroup_1(), "rule__OperationSpecial__Group_1__0");
					put(grammarAccess.getOperationSpecialAccess().getGroup_2(), "rule__OperationSpecial__Group_2__0");
					put(grammarAccess.getOperationSpecialAccess().getGroup_3(), "rule__OperationSpecial__Group_3__0");
					put(grammarAccess.getOperationSpecialAccess().getGroup_4(), "rule__OperationSpecial__Group_4__0");
					put(grammarAccess.getAttributeAccess().getGroup(), "rule__Attribute__Group__0");
					put(grammarAccess.getAttributeAccess().getGroup_0(), "rule__Attribute__Group_0__0");
					put(grammarAccess.getAttributeAccess().getGroup_0_2(), "rule__Attribute__Group_0_2__0");
					put(grammarAccess.getAttributeAccess().getGroup_6(), "rule__Attribute__Group_6__0");
					put(grammarAccess.getAttributeAccess().getGroup_6_0(), "rule__Attribute__Group_6_0__0");
					put(grammarAccess.getAttributeAccess().getGroup_6_0_3(), "rule__Attribute__Group_6_0_3__0");
					put(grammarAccess.getAttributeAccess().getGroup_6_1(), "rule__Attribute__Group_6_1__0");
					put(grammarAccess.getAttributeAccess().getGroup_6_1_3(), "rule__Attribute__Group_6_1_3__0");
					put(grammarAccess.getExceptionAccess().getGroup(), "rule__Exception__Group__0");
					put(grammarAccess.getExceptionAccess().getGroup_0(), "rule__Exception__Group_0__0");
					put(grammarAccess.getExceptionAccess().getGroup_0_2(), "rule__Exception__Group_0_2__0");
					put(grammarAccess.getExceptionFieldAccess().getGroup(), "rule__ExceptionField__Group__0");
					put(grammarAccess.getArgumentAccess().getGroup(), "rule__Argument__Group__0");
					put(grammarAccess.getArgumentAccess().getGroup_0(), "rule__Argument__Group_0__0");
					put(grammarAccess.getArgumentAccess().getGroup_0_2(), "rule__Argument__Group_0_2__0");
					put(grammarAccess.getConstAccess().getGroup(), "rule__Const__Group__0");
					put(grammarAccess.getConstExprAccess().getGroup_0(), "rule__ConstExpr__Group_0__0");
					put(grammarAccess.getConstExprAccess().getGroup_1(), "rule__ConstExpr__Group_1__0");
					put(grammarAccess.getIDLDefinitionsAccess().getImportsAssignment_0(), "rule__IDLDefinitions__ImportsAssignment_0");
					put(grammarAccess.getIDLDefinitionsAccess().getDefinitionsAssignment_1(), "rule__IDLDefinitions__DefinitionsAssignment_1");
					put(grammarAccess.getImportAccess().getImportURIAssignment_1(), "rule__Import__ImportURIAssignment_1");
					put(grammarAccess.getTypeDefAccess().getTypeAssignment_1(), "rule__TypeDef__TypeAssignment_1");
					put(grammarAccess.getTypeDefAccess().getNameAssignment_2(), "rule__TypeDef__NameAssignment_2");
					put(grammarAccess.getTypeRefAccess().getIsArrayAssignment_0_1(), "rule__TypeRef__IsArrayAssignment_0_1");
					put(grammarAccess.getTypeRefAccess().getIsArrayAssignment_1_1(), "rule__TypeRef__IsArrayAssignment_1_1");
					put(grammarAccess.getTypeRefAccess().getIsArrayAssignment_2_1(), "rule__TypeRef__IsArrayAssignment_2_1");
					put(grammarAccess.getUserTypeRefAccess().getTypeAssignment(), "rule__UserTypeRef__TypeAssignment");
					put(grammarAccess.getPrimitiveTypeRefAccess().getUnsignedAssignment_0(), "rule__PrimitiveTypeRef__UnsignedAssignment_0");
					put(grammarAccess.getPrimitiveTypeRefAccess().getNameAssignment_1(), "rule__PrimitiveTypeRef__NameAssignment_1");
					put(grammarAccess.getPrimitiveTypeRefAccess().getNullableAssignment_2(), "rule__PrimitiveTypeRef__NullableAssignment_2");
					put(grammarAccess.getSequenceTypeAccess().getTypeAssignment_1(), "rule__SequenceType__TypeAssignment_1");
					put(grammarAccess.getSequenceTypeAccess().getNullableAssignment_3(), "rule__SequenceType__NullableAssignment_3");
					put(grammarAccess.getCallableAccess().getTargetAssignment_1(), "rule__Callable__TargetAssignment_1");
					put(grammarAccess.getConstructorAccess().getArgumentsAssignment_2_1(), "rule__Constructor__ArgumentsAssignment_2_1");
					put(grammarAccess.getConstructorAccess().getArgumentsAssignment_2_2_1(), "rule__Constructor__ArgumentsAssignment_2_2_1");
					put(grammarAccess.getNamedConstructorAccess().getNameAssignment_3(), "rule__NamedConstructor__NameAssignment_3");
					put(grammarAccess.getNamedConstructorAccess().getArgumentsAssignment_4_1_0(), "rule__NamedConstructor__ArgumentsAssignment_4_1_0");
					put(grammarAccess.getNamedConstructorAccess().getArgumentsAssignment_4_1_1_1(), "rule__NamedConstructor__ArgumentsAssignment_4_1_1_1");
					put(grammarAccess.getCallbackAccess().getFunctionOnlyAssignment_1_2(), "rule__Callback__FunctionOnlyAssignment_1_2");
					put(grammarAccess.getCallbackAccess().getPropertyOnlyAssignment_2_2(), "rule__Callback__PropertyOnlyAssignment_2_2");
					put(grammarAccess.getPutForwardsAccess().getTargetAssignment_2(), "rule__PutForwards__TargetAssignment_2");
					put(grammarAccess.getTreatUndefinedAsAccess().getAsEmptyStringAssignment_0_3(), "rule__TreatUndefinedAs__AsEmptyStringAssignment_0_3");
					put(grammarAccess.getTreatUndefinedAsAccess().getAsNullAssignment_1_3(), "rule__TreatUndefinedAs__AsNullAssignment_1_3");
					put(grammarAccess.getImplementStatementAccess().getSourceAssignment_0(), "rule__ImplementStatement__SourceAssignment_0");
					put(grammarAccess.getImplementStatementAccess().getTargetAssignment_2(), "rule__ImplementStatement__TargetAssignment_2");
					put(grammarAccess.getModuleAccess().getExtendedAttributesAssignment_0_1(), "rule__Module__ExtendedAttributesAssignment_0_1");
					put(grammarAccess.getModuleAccess().getExtendedAttributesAssignment_0_2_1(), "rule__Module__ExtendedAttributesAssignment_0_2_1");
					put(grammarAccess.getModuleAccess().getNameAssignment_2(), "rule__Module__NameAssignment_2");
					put(grammarAccess.getModuleAccess().getDefinitionsAssignment_4(), "rule__Module__DefinitionsAssignment_4");
					put(grammarAccess.getPrefixAccess().getValueAssignment_2(), "rule__Prefix__ValueAssignment_2");
					put(grammarAccess.getInterfaceAccess().getExtendedAttributesAssignment_0_1(), "rule__Interface__ExtendedAttributesAssignment_0_1");
					put(grammarAccess.getInterfaceAccess().getExtendedAttributeAssignment_0_2_1(), "rule__Interface__ExtendedAttributeAssignment_0_2_1");
					put(grammarAccess.getInterfaceAccess().getNameAssignment_2(), "rule__Interface__NameAssignment_2");
					put(grammarAccess.getInterfaceAccess().getSuperTypeAssignment_3_0_1(), "rule__Interface__SuperTypeAssignment_3_0_1");
					put(grammarAccess.getInterfaceAccess().getSuperTypeAssignment_3_1_1(), "rule__Interface__SuperTypeAssignment_3_1_1");
					put(grammarAccess.getInterfaceAccess().getMembersAssignment_4_1(), "rule__Interface__MembersAssignment_4_1");
					put(grammarAccess.getOperationAccess().getExtendedAttributesAssignment_0_1(), "rule__Operation__ExtendedAttributesAssignment_0_1");
					put(grammarAccess.getOperationAccess().getExtendedAttributesAssignment_0_2_1(), "rule__Operation__ExtendedAttributesAssignment_0_2_1");
					put(grammarAccess.getOperationAccess().getStringifierAssignment_1(), "rule__Operation__StringifierAssignment_1");
					put(grammarAccess.getOperationAccess().getOmittableAssignment_2(), "rule__Operation__OmittableAssignment_2");
					put(grammarAccess.getOperationAccess().getSpecialsAssignment_3(), "rule__Operation__SpecialsAssignment_3");
					put(grammarAccess.getOperationAccess().getReturnAssignment_4(), "rule__Operation__ReturnAssignment_4");
					put(grammarAccess.getOperationAccess().getNameAssignment_5(), "rule__Operation__NameAssignment_5");
					put(grammarAccess.getOperationAccess().getArgumentsAssignment_7_0(), "rule__Operation__ArgumentsAssignment_7_0");
					put(grammarAccess.getOperationAccess().getArgumentsAssignment_7_1_1(), "rule__Operation__ArgumentsAssignment_7_1_1");
					put(grammarAccess.getOperationAccess().getRaisesAssignment_9_2(), "rule__Operation__RaisesAssignment_9_2");
					put(grammarAccess.getOperationAccess().getRaisesAssignment_9_3_1(), "rule__Operation__RaisesAssignment_9_3_1");
					put(grammarAccess.getAttributeAccess().getExtendedAttributesAssignment_0_1(), "rule__Attribute__ExtendedAttributesAssignment_0_1");
					put(grammarAccess.getAttributeAccess().getExtendedAttributesAssignment_0_2_1(), "rule__Attribute__ExtendedAttributesAssignment_0_2_1");
					put(grammarAccess.getAttributeAccess().getStringifierAssignment_1(), "rule__Attribute__StringifierAssignment_1");
					put(grammarAccess.getAttributeAccess().getTypeAssignment_4(), "rule__Attribute__TypeAssignment_4");
					put(grammarAccess.getAttributeAccess().getNameAssignment_5(), "rule__Attribute__NameAssignment_5");
					put(grammarAccess.getAttributeAccess().getGetRaisesAssignment_6_0_2(), "rule__Attribute__GetRaisesAssignment_6_0_2");
					put(grammarAccess.getAttributeAccess().getGetRaisesAssignment_6_0_3_1(), "rule__Attribute__GetRaisesAssignment_6_0_3_1");
					put(grammarAccess.getAttributeAccess().getSetRaisesAssignment_6_1_2(), "rule__Attribute__SetRaisesAssignment_6_1_2");
					put(grammarAccess.getAttributeAccess().getSetRaisesAssignment_6_1_3_1(), "rule__Attribute__SetRaisesAssignment_6_1_3_1");
					put(grammarAccess.getExceptionAccess().getExtendedAttributesAssignment_0_1(), "rule__Exception__ExtendedAttributesAssignment_0_1");
					put(grammarAccess.getExceptionAccess().getExtendedAttributesAssignment_0_2_1(), "rule__Exception__ExtendedAttributesAssignment_0_2_1");
					put(grammarAccess.getExceptionAccess().getNameAssignment_2(), "rule__Exception__NameAssignment_2");
					put(grammarAccess.getExceptionAccess().getMembersAssignment_4(), "rule__Exception__MembersAssignment_4");
					put(grammarAccess.getExceptionFieldAccess().getTypeAssignment_0(), "rule__ExceptionField__TypeAssignment_0");
					put(grammarAccess.getExceptionFieldAccess().getNameAssignment_1(), "rule__ExceptionField__NameAssignment_1");
					put(grammarAccess.getArgumentAccess().getExtendedAttributesAssignment_0_1(), "rule__Argument__ExtendedAttributesAssignment_0_1");
					put(grammarAccess.getArgumentAccess().getExtendedAttributesAssignment_0_2_1(), "rule__Argument__ExtendedAttributesAssignment_0_2_1");
					put(grammarAccess.getArgumentAccess().getInAssignment_1(), "rule__Argument__InAssignment_1");
					put(grammarAccess.getArgumentAccess().getOptionalAssignment_2(), "rule__Argument__OptionalAssignment_2");
					put(grammarAccess.getArgumentAccess().getTypeAssignment_3(), "rule__Argument__TypeAssignment_3");
					put(grammarAccess.getArgumentAccess().getEllipsisAssignment_4(), "rule__Argument__EllipsisAssignment_4");
					put(grammarAccess.getArgumentAccess().getNameAssignment_5(), "rule__Argument__NameAssignment_5");
					put(grammarAccess.getConstAccess().getTypeAssignment_1(), "rule__Const__TypeAssignment_1");
					put(grammarAccess.getConstAccess().getNameAssignment_2(), "rule__Const__NameAssignment_2");
					put(grammarAccess.getConstAccess().getExprAssignment_4(), "rule__Const__ExprAssignment_4");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.waml.w3c.webidl.ui.contentassist.antlr.internal.InternalWebIDLParser typedParser = (org.waml.w3c.webidl.ui.contentassist.antlr.internal.InternalWebIDLParser) parser;
			typedParser.entryRuleIDLDefinitions();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public WebIDLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(WebIDLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
